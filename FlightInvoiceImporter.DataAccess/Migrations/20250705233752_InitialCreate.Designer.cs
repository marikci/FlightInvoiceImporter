// <auto-generated />
using System;
using FlightInvoiceImporter.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FlightInvoiceImporter.DataAccess.Migrations
{
    [DbContext(typeof(ReservationDbContext))]
    [Migration("20250705233752_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("odeon")
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FlightInvoiceImporter.DataAccess.Entities.ReservationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("BookingId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("booking_id");

                    b.Property<string>("CarrierCode")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("carrier_code");

                    b.Property<string>("Customer")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("customer");

                    b.Property<string>("Destination")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("destination");

                    b.Property<DateTime>("FlightDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("flight_date");

                    b.Property<int>("FlightNumber")
                        .HasColumnType("integer")
                        .HasColumnName("flight_number");

                    b.Property<long?>("InvoiceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("invoice_number");

                    b.Property<string>("Origin")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("origin");

                    b.Property<decimal>("Price")
                        .HasColumnType("numeric")
                        .HasColumnName("price");

                    b.HasKey("Id");

                    b.HasIndex("CarrierCode", "FlightNumber", "FlightDate")
                        .HasDatabaseName("ix_reservation_carrier_flight_date");

                    b.ToTable("reservations", "odeon");
                });

            modelBuilder.Entity("FlightInvoiceImporter.DataAccess.Entities.ReservationFileEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("text")
                        .HasColumnName("error_message");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<long>("FileSizeInBytes")
                        .HasColumnType("bigint")
                        .HasColumnName("file_size_in_bytes");

                    b.Property<long>("InvoiceNumber")
                        .HasColumnType("bigint")
                        .HasColumnName("invoice_number");

                    b.Property<bool>("IsSuccess")
                        .HasColumnType("boolean")
                        .HasColumnName("is_success");

                    b.Property<DateTime>("ProcessedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("processed_at");

                    b.Property<int>("RowCount")
                        .HasColumnType("integer")
                        .HasColumnName("row_count");

                    b.Property<string>("UniqueFileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unique_file_name");

                    b.HasKey("Id");

                    b.ToTable("reservation_files", "odeon");
                });
#pragma warning restore 612, 618
        }
    }
}
